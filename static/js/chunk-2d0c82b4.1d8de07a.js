(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c82b4"],{5476:function(t,n,e){"use strict";e.r(n);var r=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[e("div",{ref:"cesiumContainer",attrs:{id:"cesiumContainer"}})])},o=[],a={name:"custom",components:{},data:function(){return{cesium:{viewer:null}}},methods:{initCesium:function(){var t=new XE.Earth(this.$refs.cesiumContainer);t.interaction.picking.enabled=!0,t.sceneTree.root={children:[{czmObject:{name:"默认离线影像",xbsjType:"Imagery",xbsjImageryProvider:{createTileMapServiceImageryProvider:{url:XE.HTML.cesiumDir+"Assets/Textures/NaturalEarthII",fileExtension:"jpg"},type:"createTileMapServiceImageryProvider"}}}]},this.$root.$viewer=t;var n="\n                if (p._drawArrow) {\n                    return;\n                }\n\n                // ctx：Canvas绘图环境\n                // fromX, fromY：起点坐标（也可以换成p1，只不过它是一个数组）\n                // toX, toY：终点坐标 (也可以换成p2，只不过它是一个数组)\n                // theta：三角斜边一直线夹角\n                // headlen：三角斜边长度\n                // width：箭头线宽度\n                // color：箭头颜色\n                function drawArrow(ctx, fromX, fromY, toX, toY, theta, headlen, width, color) {\n\n                    theta = typeof (theta) != 'undefined' ? theta : 30;\n                    headlen = typeof (theta) != 'undefined' ? headlen : 10;\n                    width = typeof (width) != 'undefined' ? width : 1;\n                    color = typeof (color) != 'color' ? color : '#000';\n\n                    // 计算各角度和对应的P2,P3坐标\n                    var angle = Math.atan2(fromY - toY, fromX - toX) * 180 / Math.PI,\n                        angle1 = (angle + theta) * Math.PI / 180,\n                        angle2 = (angle - theta) * Math.PI / 180,\n                        topX = headlen * Math.cos(angle1),\n                        topY = headlen * Math.sin(angle1),\n                        botX = headlen * Math.cos(angle2),\n                        botY = headlen * Math.sin(angle2);\n\n                    ctx.save();\n                    ctx.beginPath();\n\n                    var arrowX = fromX - topX,\n                        arrowY = fromY - topY;\n\n                    ctx.moveTo(arrowX, arrowY);\n                    ctx.moveTo(fromX, fromY);\n                    ctx.lineTo(toX, toY);\n                    arrowX = toX + topX;\n                    arrowY = toY + topY;\n                    ctx.moveTo(arrowX, arrowY);\n                    ctx.lineTo(toX, toY);\n                    arrowX = toX + botX;\n                    arrowY = toY + botY;\n                    ctx.lineTo(arrowX, arrowY);\n                    ctx.strokeStyle = color;\n                    ctx.lineWidth = width;\n                    ctx.stroke();\n                    ctx.restore();\n                }\n\n                p._drawArrow = drawArrow;\n                p._angle = 0;\n            ",e='\n                p._angle += 1;\n                if (p._angle > 360.0) {\n                    p._angle = 0.0;\n                }\n                const angle = p._angle;\n\n                p.drawCanvas(ctx => {\n                    ctx.clearRect(0, 0, 256, 256);\n\n                    ctx.save();\n\n                    ctx.translate(128, 128);\n                    ctx.rotate(-angle * Math.PI / 180.0);\n\n                    // 状态设置\n                    ctx.strokeStyle = "rgb(64, 35, 220)"; \n                    ctx.setLineDash([8, 8]);\n                    ctx.lineWidth = 3;\n                    \n                    // 大圆\n                    ctx.beginPath();\n                    ctx.arc(0, 0, 120, 0, Math.PI*2, true);\n                    ctx.stroke();\n\n                    // 小圆\n                    // ctx.beginPath();\n                    // ctx.arc(0, 0, 64, 0, Math.PI*2, true);\n                    // ctx.stroke();\n\n                    p._drawArrow(ctx, 0, 0, 120, 0, 30, 10, 3, "rgb(64, 35, 220)");\n\n                    ctx.font = "16px Microsoft YaHei";\n                    ctx.fillStyle = "rgb(64, 35, 220)";\n                    ctx.fillText("测试", 40, -5);\n\n                    ctx.restore();\n                });\n            ',r={position:[116.39,39.9,10].xeptr,positions:XE.Obj.CustomPrimitive.Geometry.unitSquare.positions,sts:XE.Obj.CustomPrimitive.Geometry.unitSquare.sts,indices:XE.Obj.CustomPrimitive.Geometry.unitSquare.indices,scale:[100,100,1],renderState:XE.Obj.CustomPrimitive.getRenderState(!0,!0),canvasWidth:256,canvasHeight:256,preUpdateEvalString:e,evalString:n},o=new XE.Obj.CustomPrimitive(t);o.xbsjFromJSON(r),o.flyTo()}},mounted:function(){this.initCesium()}},i=a,c=e("2877"),s=Object(c["a"])(i,r,o,!1,null,null,null);n["default"]=s.exports}}]);